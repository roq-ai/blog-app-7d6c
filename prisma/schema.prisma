generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model blog {
  id            String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title         String          @db.VarChar(255)
  content       String
  publisher_id  String?         @db.Uuid
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  publisher     publisher?      @relation(fields: [publisher_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  blog_category blog_category[]
}

model blog_category {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  blog_id     String?   @db.Uuid
  category_id String?   @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  blog        blog?     @relation(fields: [blog_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  category    category? @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model category {
  id            String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name          String          @db.VarChar(255)
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  blog_category blog_category[]
}

model newsletter_subscriber {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email      String   @db.VarChar(255)
  user_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model publisher {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  blog        blog[]
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                    String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                 String                  @unique @db.VarChar(255)
  firstName             String?                 @db.VarChar(255)
  lastName              String?                 @db.VarChar(255)
  roq_user_id           String                  @db.VarChar(255)
  tenant_id             String                  @db.VarChar(255)
  created_at            DateTime                @default(now()) @db.Timestamp(6)
  updated_at            DateTime                @default(now()) @db.Timestamp(6)
  newsletter_subscriber newsletter_subscriber[]
  publisher             publisher[]
}
